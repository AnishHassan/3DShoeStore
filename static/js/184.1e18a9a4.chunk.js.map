{"version":3,"file":"static/js/184.1e18a9a4.chunk.js","mappings":"gMAqBMA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gMAGnB,SAACC,GAAK,OAAMA,EAAMC,SAAW,GAAM,EAAG,IAU7CC,EAAeL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iPACjB,SAACC,GAAK,OAAMA,EAAMC,SAAW,GAAM,CAAC,IA+CjD,UAhCqC,SAAHG,GAAsB,IAAhBC,EAAQD,EAARC,SAEpCC,GAA+CC,EAAAA,EAAAA,UAAyB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtEI,EAAeF,EAAA,GAAEG,EAAmBH,EAAA,GACrCI,GAAWC,EAAAA,EAAAA,MAOjB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,SACzBX,EAASa,KAAI,SAACC,GAAO,OAClBC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAClB,EAAa,CACVyB,IAAKF,EAAQG,SAEbrB,UAAyB,OAAfS,QAAe,IAAfA,OAAe,EAAfA,EAAiBa,MAAOJ,EAAQI,KAAM,EAChDC,QAAS,kBAfL,SAACL,GACzBR,EAAoBQ,GACpBP,GAASa,EAAAA,EAAAA,IAAmBN,GAChC,CAYuCO,CAAoBP,EAAQ,GAFtCA,EAAQI,KAIjBH,EAAAA,EAAAA,MAAClB,EAAY,CAACD,UAAyB,OAAfS,QAAe,IAAfA,OAAe,EAAfA,EAAiBa,MAAOJ,EAAQI,KAAM,EAAMP,SAAA,CAAC,IACxD,OAAPG,QAAO,IAAPA,OAAO,EAAPA,EAASQ,MAAM,WAEnB,OAM1B,C","sources":["3DProducts/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setSelectedProduct } from '../store/appSlice';\r\n\r\n\r\n// Define the data structure for product information\r\nexport interface Product {\r\n    id: number;\r\n    name: string;\r\n    imageUrl: string;\r\n    modelUrl?: string;\r\n    price?: number;\r\n}\r\n\r\n// Define the props for the component\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\n// Define the styled components for the product buttons\r\nconst ProductButton = styled.img<{ isActive: boolean }>`\r\n  width: 120px;\r\n  height: 120px;\r\n  opacity: ${(props) => (props.isActive ? 0.9 : 0.4)};\r\n  transition: opacity 0.3s ease-in;\r\n  cursor : pointer;\r\n  @media (max-width: 1440px) {\r\n  width: 95px;\r\n  height: 95px;\r\n\r\n  }\r\n`;\r\n\r\nconst ProductPrice = styled.h4<{ isActive: boolean }>`\r\n  opacity: ${(props) => (props.isActive ? 0.9 : 0)};\r\n  transition: opacity 0.3s ease-in;\r\n  font-family: 'Poppins', sans-serif;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-top : 4px;\r\n  color : #fff;\r\n   @media (max-width: 1440px) {\r\n  font-size: 14px;\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\nconst ProductView: React.FC<Props> = ({ products }) => {\r\n\r\n    const [selectedProduct, setSelectedProduct1] = useState<Product | null>(null);\r\n    const dispatch = useDispatch();\r\n    const handleProductSelect = (product: Product) => {\r\n        setSelectedProduct1(product);\r\n        dispatch(setSelectedProduct(product));\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='products-pane'>\r\n                {products.map((product) => (\r\n                    <div className='product-set'>\r\n                        <ProductButton\r\n                            src={product.imageUrl}\r\n                            key={product.id}\r\n                            isActive={selectedProduct?.id === product.id || false}\r\n                            onClick={() => handleProductSelect(product)}\r\n                        />\r\n                        <ProductPrice isActive={selectedProduct?.id === product.id || false}>\r\n                            ${product?.price}.00\r\n                        </ProductPrice>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductView;\r\n\r\n"],"names":["ProductButton","styled","_templateObject","_taggedTemplateLiteral","props","isActive","ProductPrice","_templateObject2","_ref","products","_useState","useState","_useState2","_slicedToArray","selectedProduct","setSelectedProduct1","dispatch","useDispatch","_jsx","_Fragment","children","className","map","product","_jsxs","src","imageUrl","id","onClick","setSelectedProduct","handleProductSelect","price"],"sourceRoot":""}